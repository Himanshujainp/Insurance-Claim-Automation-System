<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Framework.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Framework.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Main" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="NewTransaction" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_9">
        <Sequence DisplayName="Get Mail" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <Sequence.Variables>
            <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="Recv" />
            <Variable x:TypeArguments="ui:GenericValue" Name="TodayMail" />
            <Variable x:TypeArguments="scg:IEnumerable(snm:MailMessage)" Name="todayMessages" />
            <Variable x:TypeArguments="ui:GenericValue" Name="i" />
          </Sequence.Variables>
          <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get outlook mail messages" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Inbox" MarkAsRead="False" Messages="[Recv]" OnlyUnreadMessages="True" Top="30" />
          <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:IEnumerable(snm:MailMessage)">[todayMessages]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:IEnumerable(snm:MailMessage)">[Recv.Where(Function(x) DateTime.ParseExact(x.Headers("Date"), "MM/dd/yyyy HH:mm:ss", Nothing).Date.Equals(DateTime.Now.Date))]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="snm:MailMessage" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[todayMessages]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="snm:MailMessage">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="mail" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="s:DateTime" Name="mailDate" />
                    <Variable x:TypeArguments="ui:GenericValue" Name="stringDate" />
                  </Sequence.Variables>
                  <If Condition="[mail.Subject.Contains(&quot;Important - Action required on your claim request&quot;)]" sap2010:WorkflowViewState.IdRef="If_5">
                    <If.Then>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="mailid" />
                          <Variable x:TypeArguments="ui:GenericValue" Name="time" />
                          <Variable x:TypeArguments="x:Int32" Name="templen" />
                        </Sequence.Variables>
                        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message box" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[mail.Headers(&quot;Date&quot;)+&quot; &quot;+mail.Sender.Address.ToString+&quot; &quot;+mail.Subject+&quot; &quot;+mail.Body]" TopMost="True" />
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[mailid]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[mail.Sender.Address.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:GenericValue">[time]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:GenericValue">[mail.Headers("Date").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="sd:DataTable" Name="FilterVal" />
                                </Sequence.Variables>
                                <ui:ExcelReadRange AddHeaders="True" DataTable="[FilterVal]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sheet7">
                                  <ui:ExcelReadRange.Range>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:ExcelReadRange.Range>
                                </ui:ExcelReadRange>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ForEachRow DataTable="[FilterVal]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="ui:GenericValue" Name="qote" />
                                        </Sequence.Variables>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[qote]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ui:GenericValue">[""""]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <If Condition="[mailid.ToString.equals(row.Item(10).ToString)]" sap2010:WorkflowViewState.IdRef="If_4">
                                          <If.Then>
                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;MAIL: &quot;+mailid+&quot; - SENT TIME: &quot;+row.Item(8).ToString+&quot; -  RECEIVETIME: &quot;+time]" />
                                              <ui:ExcelWriteCell Cell="[&quot;N&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Sheet7" Text="[time.ToString]" />
                                              <ui:ExcelWriteCell Cell="[&quot;L&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Sheet7" Text="[&quot;=DATEDIF(N&quot;+i+&quot;,I&quot;+i+&quot;,&quot;+qote+&quot;d&quot;+qote+&quot;)&quot;]" />
                                              <ui:ExcelWriteCell Cell="[&quot;M&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Sheet7" Text="[mail.Body]" />
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ui:GenericValue">[i+1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                </ui:ForEachRow>
                              </Sequence>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                        </ui:ExcelApplicationScope>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="Getting Mail - Over" />
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_8">
            <Sequence DisplayName="Reply Status" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:GenericValue" Name="i" />
              </Sequence.Variables>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="MailDT" />
                      </Sequence.Variables>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[MailDT]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet7">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                      <ui:ForEachRow DataTable="[MailDT]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_8">
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message box" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[row.Item(11).ToString]" TopMost="True" />
                              <If Condition="[string.IsNullOrWhiteSpace(row.Item(7).ToString)]" sap2010:WorkflowViewState.IdRef="If_13">
                                <If.Then>
                                  <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="Sheet7" Text="INVALID" />
                                </If.Then>
                                <If.Else>
                                  <If Condition="[string.IsNullOrWhiteSpace(row.Item(11).ToString) and not(string.IsNullOrWhiteSpace(row.Item(10).ToString))]" sap2010:WorkflowViewState.IdRef="If_6">
                                    <If.Then>
                                      <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="Sheet7" Text="No Response yet" />
                                    </If.Then>
                                    <If.Else>
                                      <If Condition="[row.Item(11).ToString = &quot;0&quot; or row.Item(11).ToString = &quot;1&quot;]" sap2010:WorkflowViewState.IdRef="If_9">
                                        <If.Then>
                                          <If Condition="[row.Item(12).ToString.Contains(&quot;No&quot;)]" sap2010:WorkflowViewState.IdRef="If_8">
                                            <If.Then>
                                              <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Sheet7" Text="Accepted - Reply" />
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                <If Condition="[row.Item(12).ToString.Contains(&quot;Yes&quot;)]" sap2010:WorkflowViewState.IdRef="If_7">
                                                  <If.Then>
                                                    <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Sheet7" Text="Cancelled - Reply" />
                                                  </If.Then>
                                                </If>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </If.Then>
                                        <If.Else>
                                          <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Sheet7" Text="Accepted - Timeout" />
                                        </If.Else>
                                      </If>
                                    </If.Else>
                                  </If>
                                </If.Else>
                              </If>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[i + 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                      </ui:ForEachRow>
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                <Sequence DisplayName="Timeout - Check" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataTable" Name="sheet7Val" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="i" />
                          </Sequence.Variables>
                          <ui:ExcelReadRange AddHeaders="True" DataTable="[sheet7Val]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="Sheet7">
                            <ui:ExcelReadRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelReadRange.Range>
                          </ui:ExcelReadRange>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEachRow DataTable="[sheet7Val]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                  <If Condition="[not(string.IsNullOrWhiteSpace(row.Item(9).ToString))]" sap2010:WorkflowViewState.IdRef="If_12">
                                    <If.Then>
                                      <If Condition="[row.Item(14).ToString.Equals(&quot;No Response yet&quot;)]" sap2010:WorkflowViewState.IdRef="If_10">
                                        <If.Then>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message box" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[row.Item(9).ToString+&quot; - &quot;+row.Item(13).ToString]" TopMost="True" />
                                            <If Condition="[Convert.ToDateTime(row.Item(9).ToString) &lt; System.DateTime.Now and string.IsNullOrWhiteSpace(row.Item(13).ToString)]" sap2010:WorkflowViewState.IdRef="If_11">
                                              <If.Then>
                                                <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Sheet7" Text="Timedout!" />
                                              </If.Then>
                                            </If>
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                    </If.Then>
                                  </If>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:GenericValue">[i + 1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                          </ui:ForEachRow>
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                  </ui:ExcelApplicationScope>
                </Sequence>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <sads:DebugSymbol.Symbol>dz1DOlxVc2Vyc1xzcmlyYVxEb2N1bWVudHNcVWlQYXRoXEluc3VyYW5jZS1NYWlsQ2hlY2tcTWFpbi54YW1sjQFAA/ICDwIBAUYJxwEUAgFcygENogIYAgElpQIR5wIcAgECTQtNuAIDAaYBTgtVFAMBogFWC8UBGAIBX8YBC8YBkAECAV3OAQ/VARgCAVjWAQ+hAioCASamAhPmAi4CAQNNsQJNtQIDAaoBTYoCTZICAwGoAU3mAU3tAQMBpwFTTlPNAQMBpQFQT1BeAwGjAVaFAVaWAQMBoAFcEcIBHAIBYMYBeMYBjQECAV7TAUHTAUQCAVvQAULQAUUCAVnWAaoB1gHsAQIBV9wBFZ4CIAIBJ6YCrgGmAvABAgEkrAIZ4wIkAgEEYRPBARgCAWHgARfmASsCAVLnARedAicCASixAhu3Ai8CAR+4Ahu/AiQCARvAAhviAisCAQVhIWF5AgFiYxe/ASICAWTgAUbgAVACAVXjAR3jAUwCAVTgAacB4AGvAQIBU+cBMOcBOgIBUO0BHZoCKAIBKbECSrECVwIBIrQCIbQCUAIBIbECrgGxArYBAgEgvQJNvQJQAgEeugJOugJRAgEcwAI0wAJBAgEZxgIh3wIsAgEGaRlpwAIDAZoBahlxIgMBlQFyGXkiAwGQAXoZvgE0AgFl7gEf7gHfAQIBTu8BH5ECJAIBL5ICH5kCKAIBKscCI9YCKAIBDNcCI94CLAIBB2muAWmuAgMBmwFvRG9iAwGYAWxFbE0DAZYBd0t3agMBkwF0THRSAwGRAXq0AXr2AQMBjwGAAR+7ASoCAWbuAbQB7gHNAQIBT+8BLe8BYAIBMPEBI/EBwAECAUr0ASOPAigCATGXAlGXAlgCAS2UAlKUAlUCASvHAjHHAmkCAQ3JAifUAiwCAQ7cAlXcAlwCAQrZAlbZAlkCAQiEASGKATUDAYoBiwEhkgEqAwGGAZMBIboBMQIBZ/EBO/EBTgIBTfEBtAHxAb0BAgFM8QGmAfEBrgECAUv0ATH0AZ8BAgEy9gEn9gHMAQIBRvkBJ40CLAIBM8kCNckCcgIBD8sCK9ICNgIBEIQBUIQBXQMBjQGHASeHAVYDAYwBhAG0AYQBvAEDAYsBkAFTkAFWAwGJAY0BVI0BVwMBhwGTATqTAUcDAYQBmQEntwEyAgFo9gE/9gFSAgFJ9gG4AfYByQECAUj2AaoB9gGyAQIBR/kBNfkBhwECATT7ASuIAjACATmLAiuLAtMBAgE1zAItzAKSAgIBF80CLdECMgIBEZ0BKaQBMgMBgAGlASmuAS4CAW6vASm2ATICAWn7ATn7AWsCATr9AS/9AdQBAgFCgAIvhgI6AgE7iwJDiwJWAgE4iwK8AYsC0AECATeLAq4BiwK2AQIBNswCwgHMAoACAgEYzQI7zQK1AQIBEs8CMc8C0AECAROiAVuiAWEDAYMBnwFcnwFiAwGBAaUBN6UBaAIBb6cBLawBOAIBcLQBW7QBYAIBbLEBXLEBXwIBav0BR/0BWgIBRf0BvwH9AdEBAgFE/QGxAf0BuQECAUOBAjGFAjYCATzPAknPAlwCARbPAsIBzwLNAQIBFc8CtAHPArwBAgEUqAEvqAGPAgIBfqkBL6kB0wECAXqqAS+qAaMCAgF2qwEvqwHPAQIBcYECP4ECcgIBPYMCNYMC2wECAT6oAZwBqAGMAgIBf6kBR6kBWgIBfakBvwGpAdABAgF8qQGxAakBuQECAXuqAUeqAVoCAXmqAb8BqgGgAgIBeKoBsQGqAbkBAgF3qwFHqwFaAgF1qwG/AasBzAECAXOrAbEBqwG5AQIBcoMCTYMCYAIBQYMCxQGDAtgBAgFAgwK3AYMCvwECAT8=</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetOutlookMailMessages_1" sap:VirtualizedContainerService.HintSize="737,22" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="737,60" />
      <sap2010:ViewStateData Id="MessageBox_2" sap:VirtualizedContainerService.HintSize="552,59" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="552,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="552,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_2" sap:VirtualizedContainerService.HintSize="516,59" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="ExcelWriteCell_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,596">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,743" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="486,1067">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="516,1214" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="538,1537">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_2" sap:VirtualizedContainerService.HintSize="552,1646" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="574,2069">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="699,2217" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="721,2341">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="737,2475">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="737,91" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="1930,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="1894,59" />
      <sap2010:ViewStateData Id="MessageBox_1" sap:VirtualizedContainerService.HintSize="1842,59" />
      <sap2010:ViewStateData Id="ExcelWriteCell_13" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_8" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="464,234" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="486,358">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="825,505" />
      <sap2010:ViewStateData Id="ExcelWriteCell_10" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="1164,652" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="1503,799" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="1842,946" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="1864,1269">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="1894,1416" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="1916,1639">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="1930,1748" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="1952,1972">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_3" sap:VirtualizedContainerService.HintSize="788,59" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="788,60" />
      <sap2010:ViewStateData Id="MessageBox_3" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="ExcelWriteCell_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="464,234" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="486,457">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="611,604" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="736,751" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="736,60" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="758,975">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_3" sap:VirtualizedContainerService.HintSize="788,1122" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="810,1445">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_3" sap:VirtualizedContainerService.HintSize="824,1554" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">260,314.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">260,214.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">360,265.5 360,314.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">260,124.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">360,175.5 360,214.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="738,1272">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">330,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Height">1235.5</x:Double>
            <x:Double x:Key="Width">724</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">360,77.5 360,124.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="778,1352" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>