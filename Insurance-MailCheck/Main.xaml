<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Framework.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Framework.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Main" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="NewTransaction" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo1" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo2" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo3" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo4" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo5" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo6" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo7" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo8" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo9" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo10" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo11" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo12" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo13" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo14" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo15" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo16" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Clo17" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_14">
        <Sequence DisplayName="FetchDb - Sheet 7" sap2010:WorkflowViewState.IdRef="Sequence_66">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="FinalStat" />
          </Sequence.Variables>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" CommandType="Text" DataTable="[FinalStat]" DisplayName="Execute query" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" ProviderName="System.Data.OleDb" Sql="Select * from FinalStatus" ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\InsuranceClaimAccess.accdb">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_67">
                  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                    <TryCatch.Try>
                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Cancel'" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="31fef008b0bcf0b6060420d7497a5041" Selector="&lt;wnd app='excel.exe' cls='NUIDialog' title='Microsoft Office Activation Wizard' /&gt;&lt;wnd aaname='Microsoft Office Activation Wizard' cls='NetUIHWND' /&gt;&lt;ctrl name='Microsoft Office Activation Wizard' role='dialog' /&gt;&lt;ctrl name='Cancel' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                        </ui:Click.Target>
                      </ui:Click>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[FinalStat]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet7">
                    <ui:ExcelWriteRange.StartingCell>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:ExcelWriteRange.StartingCell>
                  </ui:ExcelWriteRange>
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_15">
            <Sequence DisplayName="FetchDB - Sheet2" sap2010:WorkflowViewState.IdRef="Sequence_68">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="ClaimDetails" />
              </Sequence.Variables>
              <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" CommandType="Text" DataTable="[ClaimDetails]" DisplayName="Execute query" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" ProviderName="System.Data.OleDb" Sql="Select * from ClaimDetails" ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\InsuranceClaimAccess.accdb">
                <ui:ExecuteQuery.Parameters>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:ExecuteQuery.Parameters>
              </ui:ExecuteQuery>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_74">
                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[ClaimDetails]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Sheet2">
                        <ui:ExcelWriteRange.StartingCell>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelWriteRange.StartingCell>
                      </ui:ExcelWriteRange>
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_16">
                <Sequence DisplayName="FetchDB - Sheet1" sap2010:WorkflowViewState.IdRef="Sequence_70">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="PolicyDetails" />
                  </Sequence.Variables>
                  <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" CommandType="Text" DataTable="[PolicyDetails]" DisplayName="Execute query" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" ProviderName="System.Data.OleDb" Sql="Select * from PolicyDetails" ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\InsuranceClaimAccess.accdb">
                    <ui:ExecuteQuery.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:ExecuteQuery.Parameters>
                  </ui:ExecuteQuery>
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_73">
                          <ui:ExcelWriteRange AddHeaders="True" DataTable="[PolicyDetails]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="Sheet1">
                            <ui:ExcelWriteRange.StartingCell>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelWriteRange.StartingCell>
                          </ui:ExcelWriteRange>
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                  </ui:ExcelApplicationScope>
                </Sequence>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_17">
                    <Sequence DisplayName="FetchDB - Sheet3" sap2010:WorkflowViewState.IdRef="Sequence_71">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="Sevr" />
                      </Sequence.Variables>
                      <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" CommandType="Text" DataTable="[Sevr]" DisplayName="Execute query" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" ProviderName="System.Data.OleDb" Sql="Select * from SeverityStatus" ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\InsuranceClaimAccess.accdb">
                        <ui:ExecuteQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteQuery.Parameters>
                      </ui:ExecuteQuery>
                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_72">
                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[Sevr]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="Sheet3">
                                <ui:ExcelWriteRange.StartingCell>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:ExcelWriteRange.StartingCell>
                              </ui:ExcelWriteRange>
                            </Sequence>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                      </ui:ExcelApplicationScope>
                    </Sequence>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                        <Sequence DisplayName="Get Mail" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="Recv" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="TodayMail" />
                            <Variable x:TypeArguments="scg:IEnumerable(snm:MailMessage)" Name="todayMessages" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="i" />
                          </Sequence.Variables>
                          <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get outlook mail messages" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Inbox" MarkAsRead="False" Messages="[Recv]" OnlyUnreadMessages="True" Top="30" />
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                            <Assign.To>
                              <OutArgument x:TypeArguments="scg:IEnumerable(snm:MailMessage)">[todayMessages]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="scg:IEnumerable(snm:MailMessage)">[Recv.Where(Function(x) DateTime.ParseExact(x.Headers("Date"), "MM/dd/yyyy HH:mm:ss", Nothing).Date.Equals(DateTime.Now.Date))]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="snm:MailMessage" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[todayMessages]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="snm:MailMessage">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="mail" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="s:DateTime" Name="mailDate" />
                                    <Variable x:TypeArguments="ui:GenericValue" Name="stringDate" />
                                  </Sequence.Variables>
                                  <If Condition="[mail.Subject.Contains(&quot;Important - Action required on your claim request&quot;)]" sap2010:WorkflowViewState.IdRef="If_5">
                                    <If.Then>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="mailid" />
                                          <Variable x:TypeArguments="ui:GenericValue" Name="time" />
                                          <Variable x:TypeArguments="x:Int32" Name="templen" />
                                        </Sequence.Variables>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[mailid]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[mail.Sender.Address.ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[time]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ui:GenericValue">[mail.Headers("Date").ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                                          <ui:ExcelApplicationScope.Body>
                                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="sd:DataTable" Name="FilterVal" />
                                                  <Variable x:TypeArguments="ui:GenericValue" Name="Index" />
                                                </Sequence.Variables>
                                                <ui:ExcelReadRange AddHeaders="True" DataTable="[FilterVal]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sheet7">
                                                  <ui:ExcelReadRange.Range>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                    </InArgument>
                                                  </ui:ExcelReadRange.Range>
                                                </ui:ExcelReadRange>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:ForEachRow DataTable="[FilterVal]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                                  <ui:ForEachRow.Body>
                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                      </ActivityAction.Argument>
                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="ui:GenericValue" Name="qote" />
                                                        </Sequence.Variables>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[qote]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[""""]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <If Condition="[mailid.ToString.equals(row.Item(11).ToString)]" sap2010:WorkflowViewState.IdRef="If_4">
                                                          <If.Then>
                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;MAIL: &quot;+mailid+&quot; - SENT TIME: &quot;+row.Item(9).ToString+&quot; -  RECEIVETIME: &quot;+time]" />
                                                              <ui:ExcelWriteCell Cell="[&quot;N&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Sheet7" Text="[time.ToString]" />
                                                              <ui:ExcelWriteCell Cell="[&quot;M&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="Sheet7" Text="[&quot;=DATEDIF(J&quot;+i+&quot;,N&quot;+i+&quot;,&quot;+qote+&quot;d&quot;+qote+&quot;)&quot;]" />
                                                              <ui:ExcelWriteCell Cell="[&quot;P&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Sheet7" Text="[mail.Body.ToString.Substring(0,5)]" />
                                                            </Sequence>
                                                          </If.Then>
                                                        </If>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[i+1]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ui:ForEachRow.Body>
                                                </ui:ForEachRow>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_88">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Index]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:ForEachRow DataTable="[FilterVal]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_22">
                                                  <ui:ForEachRow.Body>
                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                      </ActivityAction.Argument>
                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                                        <If Condition="[row.Item(12).ToString.Contains(&quot;-&quot;)]" sap2010:WorkflowViewState.IdRef="If_38">
                                                          <If.Then>
                                                            <ui:ExcelWriteCell Cell="[&quot;O&quot;+Index]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="Sheet7" Text="No Response yet" />
                                                          </If.Then>
                                                        </If>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_89">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[Index]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="ui:GenericValue">[Index + 1]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ui:ForEachRow.Body>
                                                </ui:ForEachRow>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ExcelApplicationScope.Body>
                                        </ui:ExcelApplicationScope>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="Getting Mail - Over" />
                        </Sequence>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                            <Sequence DisplayName="Reply Status" sap2010:WorkflowViewState.IdRef="Sequence_10">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="ui:GenericValue" Name="i" />
                              </Sequence.Variables>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="sd:DataTable" Name="MailDT" />
                                      </Sequence.Variables>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[MailDT]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet7">
                                        <ui:ExcelReadRange.Range>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:ExcelReadRange.Range>
                                      </ui:ExcelReadRange>
                                      <ui:ForEachRow DataTable="[MailDT]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                              <If Condition="[string.IsNullOrWhiteSpace(row.Item(8).ToString)]" sap2010:WorkflowViewState.IdRef="If_13">
                                                <If.Then>
                                                  <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="Sheet7" Text="INVALID" />
                                                </If.Then>
                                                <If.Else>
                                                  <If Condition="[string.IsNullOrWhiteSpace(row.Item(12).ToString) and not(string.IsNullOrWhiteSpace(row.Item(11).ToString))]" sap2010:WorkflowViewState.IdRef="If_6">
                                                    <If.Then>
                                                      <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="Sheet7" Text="No Response yet" />
                                                    </If.Then>
                                                    <If.Else>
                                                      <If Condition="[row.Item(12).ToString = &quot;0&quot; or row.Item(12).ToString = &quot;1&quot;]" sap2010:WorkflowViewState.IdRef="If_9">
                                                        <If.Then>
                                                          <If Condition="[row.Item(15).ToString.Contains(&quot;No&quot;)]" sap2010:WorkflowViewState.IdRef="If_8">
                                                            <If.Then>
                                                              <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Sheet7" Text="Accepted - Reply" />
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                                <If Condition="[row.Item(15).ToString.Contains(&quot;Yes&quot;)]" sap2010:WorkflowViewState.IdRef="If_7">
                                                                  <If.Then>
                                                                    <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Sheet7" Text="Cancelled - Reply" />
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="Sheet7" Text="INVALID CONTENT" />
                                                                  </If.Else>
                                                                </If>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                        </If.Then>
                                                        <If.Else>
                                                          <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Sheet7" Text="Accepted - Timeout" />
                                                        </If.Else>
                                                      </If>
                                                    </If.Else>
                                                  </If>
                                                </If.Else>
                                              </If>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ui:GenericValue">[i + 1]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                      </ui:ForEachRow>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                                <Sequence DisplayName="Timeout - Check" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                                    <ui:ExcelApplicationScope.Body>
                                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="sd:DataTable" Name="sheet7Val" />
                                            <Variable x:TypeArguments="ui:GenericValue" Name="i" />
                                          </Sequence.Variables>
                                          <ui:ExcelReadRange AddHeaders="True" DataTable="[sheet7Val]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" SheetName="Sheet7">
                                            <ui:ExcelReadRange.Range>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:ExcelReadRange.Range>
                                          </ui:ExcelReadRange>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:ForEachRow DataTable="[sheet7Val]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                                            <ui:ForEachRow.Body>
                                              <ActivityAction x:TypeArguments="sd:DataRow">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                                  <If Condition="[not(string.IsNullOrWhiteSpace(row.Item(10).ToString))]" sap2010:WorkflowViewState.IdRef="If_12">
                                                    <If.Then>
                                                      <If Condition="[row.Item(14).ToString.Equals(&quot;No Response yet&quot;)]" sap2010:WorkflowViewState.IdRef="If_10">
                                                        <If.Then>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                                                            <If Condition="[Convert.ToDateTime(row.Item(10).ToString) &lt; System.DateTime.Now and row.Item(14).ToString = &quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_11">
                                                              <If.Then>
                                                                <ui:ExcelWriteCell Cell="[&quot;O&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Sheet7" Text="Time out!" />
                                                              </If.Then>
                                                            </If>
                                                          </Sequence>
                                                        </If.Then>
                                                      </If>
                                                    </If.Then>
                                                  </If>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="ui:GenericValue">[i + 1]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEachRow.Body>
                                          </ui:ForEachRow>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ExcelApplicationScope.Body>
                                  </ui:ExcelApplicationScope>
                                </Sequence>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_12">
                                    <Sequence DisplayName="Update Status" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                                        <ui:ExcelApplicationScope.Body>
                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="sd:DataTable" Name="MailDet" />
                                                <Variable x:TypeArguments="sd:DataTable" Name="ClaimDet" />
                                              </Sequence.Variables>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[MailDet]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" SheetName="Sheet7">
                                                <ui:ExcelReadRange.Range>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <Literal x:TypeArguments="x:String" Value="" />
                                                  </InArgument>
                                                </ui:ExcelReadRange.Range>
                                              </ui:ExcelReadRange>
                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[ClaimDet]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" SheetName="Sheet2">
                                                <ui:ExcelReadRange.Range>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <Literal x:TypeArguments="x:String" Value="" />
                                                  </InArgument>
                                                </ui:ExcelReadRange.Range>
                                              </ui:ExcelReadRange>
                                              <ui:ForEachRow DataTable="[MailDet]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                                                <ui:ForEachRow.Body>
                                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Mrow" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                                      <If Condition="[Mrow.Item(14).ToString.Equals(&quot;INVALID CONTENT&quot;)]" sap2010:WorkflowViewState.IdRef="If_14">
                                                        <If.Then>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="ui:GenericValue" Name="i" />
                                                            </Sequence.Variables>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:ForEachRow DataTable="[ClaimDet]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                                                              <ui:ForEachRow.Body>
                                                                <ActivityAction x:TypeArguments="sd:DataRow">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Crow" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                                                    <If Condition="[Mrow.Item(1).ToString = Crow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_15">
                                                                      <If.Then>
                                                                        <ui:ExcelWriteCell Cell="[&quot;K&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="Sheet2" Text="[&quot;Mail - &quot;+Mrow.Item(14).ToString]" />
                                                                      </If.Then>
                                                                    </If>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="ui:GenericValue">[i + 1]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:ForEachRow.Body>
                                                            </ui:ForEachRow>
                                                          </Sequence>
                                                        </If.Then>
                                                      </If>
                                                      <If Condition="[Mrow.Item(14).ToString.Equals(&quot;No Response yet&quot;)]" sap2010:WorkflowViewState.IdRef="If_17">
                                                        <If.Then>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="ui:GenericValue" Name="i" />
                                                            </Sequence.Variables>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:ForEachRow DataTable="[ClaimDet]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                                                              <ui:ForEachRow.Body>
                                                                <ActivityAction x:TypeArguments="sd:DataRow">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Crow" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                                    <If Condition="[Mrow.Item(1).ToString = Crow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_16">
                                                                      <If.Then>
                                                                        <ui:ExcelWriteCell Cell="[&quot;K&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="Sheet2" Text="[&quot;Mail - &quot;+Mrow.Item(14).ToString]" />
                                                                      </If.Then>
                                                                    </If>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="ui:GenericValue">[i + 1]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:ForEachRow.Body>
                                                            </ui:ForEachRow>
                                                          </Sequence>
                                                        </If.Then>
                                                      </If>
                                                      <If Condition="[Mrow.Item(14).ToString.Equals(&quot;INVALID&quot;)]" sap2010:WorkflowViewState.IdRef="If_19">
                                                        <If.Then>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_31">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="ui:GenericValue" Name="i" />
                                                            </Sequence.Variables>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:ForEachRow DataTable="[ClaimDet]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                                                              <ui:ForEachRow.Body>
                                                                <ActivityAction x:TypeArguments="sd:DataRow">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Crow" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                                    <If Condition="[Mrow.Item(1).ToString = Crow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_18">
                                                                      <If.Then>
                                                                        <ui:ExcelWriteCell Cell="[&quot;K&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="Sheet2" Text="[&quot;Mail - &quot;+Mrow.Item(14).ToString]" />
                                                                      </If.Then>
                                                                    </If>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="ui:GenericValue">[i + 1]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:ForEachRow.Body>
                                                            </ui:ForEachRow>
                                                          </Sequence>
                                                        </If.Then>
                                                      </If>
                                                      <If Condition="[Mrow.Item(14).ToString.Equals(&quot;Accepted - Reply&quot;)]" sap2010:WorkflowViewState.IdRef="If_21">
                                                        <If.Then>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="ui:GenericValue" Name="i" />
                                                            </Sequence.Variables>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:ForEachRow DataTable="[ClaimDet]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                                                              <ui:ForEachRow.Body>
                                                                <ActivityAction x:TypeArguments="sd:DataRow">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Crow" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                                    <If Condition="[Mrow.Item(1).ToString = Crow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_20">
                                                                      <If.Then>
                                                                        <ui:ExcelWriteCell Cell="[&quot;K&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="Sheet2" Text="[&quot;Mail - &quot;+Mrow.Item(14).ToString]" />
                                                                      </If.Then>
                                                                    </If>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="ui:GenericValue">[i + 1]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:ForEachRow.Body>
                                                            </ui:ForEachRow>
                                                          </Sequence>
                                                        </If.Then>
                                                      </If>
                                                      <If Condition="[Mrow.Item(14).ToString.Equals(&quot;Cancelled - Reply&quot;)]" sap2010:WorkflowViewState.IdRef="If_23">
                                                        <If.Then>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="ui:GenericValue" Name="i" />
                                                            </Sequence.Variables>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="ui:GenericValue">[2]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:ForEachRow DataTable="[ClaimDet]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                                                              <ui:ForEachRow.Body>
                                                                <ActivityAction x:TypeArguments="sd:DataRow">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Crow" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                                    <If Condition="[Mrow.Item(1).ToString = Crow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_22">
                                                                      <If.Then>
                                                                        <ui:ExcelWriteCell Cell="[&quot;K&quot;+i]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="Sheet2" Text="[&quot;Mail - &quot;+Mrow.Item(14).ToString]" />
                                                                      </If.Then>
                                                                    </If>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[i]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="ui:GenericValue">[i + 1]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:ForEachRow.Body>
                                                            </ui:ForEachRow>
                                                          </Sequence>
                                                        </If.Then>
                                                      </If>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ForEachRow.Body>
                                              </ui:ForEachRow>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ExcelApplicationScope.Body>
                                      </ui:ExcelApplicationScope>
                                    </Sequence>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_13">
                                        <Sequence DisplayName="Final Mail" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="ui:GenericValue" Name="Mail" />
                                          </Sequence.Variables>
                                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                                            <ui:ExcelApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="sd:DataTable" Name="MailDt" />
                                                    <Variable x:TypeArguments="sd:DataTable" Name="PolicyDET" />
                                                    <Variable x:TypeArguments="sd:DataTable" Name="ClaimDT" />
                                                    <Variable x:TypeArguments="sd:DataTable" Name="SeveDt" />
                                                  </Sequence.Variables>
                                                  <ui:ExcelReadRange AddHeaders="True" DataTable="[MailDt]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" SheetName="Sheet7">
                                                    <ui:ExcelReadRange.Range>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ExcelReadRange.Range>
                                                  </ui:ExcelReadRange>
                                                  <ui:ExcelReadRange AddHeaders="True" DataTable="[PolicyDET]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" SheetName="Sheet1">
                                                    <ui:ExcelReadRange.Range>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ExcelReadRange.Range>
                                                  </ui:ExcelReadRange>
                                                  <ui:ExcelReadRange AddHeaders="True" DataTable="[ClaimDT]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" SheetName="Sheet2">
                                                    <ui:ExcelReadRange.Range>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ExcelReadRange.Range>
                                                  </ui:ExcelReadRange>
                                                  <ui:ForEachRow DataTable="[MailDt]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
                                                    <ui:ForEachRow.Body>
                                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Mrow" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                          <If Condition="[Mrow.Item(14).ToString = &quot;INVALID CONTENT&quot;]" sap2010:WorkflowViewState.IdRef="If_24">
                                                            <If.Then>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_39">
                                                                <Sequence.Variables>
                                                                  <Variable x:TypeArguments="ui:GenericValue" Name="Temp" />
                                                                  <Variable x:TypeArguments="x:String" Name="Text" />
                                                                </Sequence.Variables>
                                                                <ui:ReadTextFile Content="[Text]" DisplayName="Read text file" FileName="inv.txt" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Temp]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[String.Format(Text,Mrow.Item(10).ToString,Mrow.Item(0).ToString,Mrow.Item(15).ToString)]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[Temp]" DisplayName="Send Outlook Mail Message" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="False" IsDraft="False" Subject="Important - Invalid Content in Client reply" To="sriramsubramanian23@gmail.com">
                                                                  <ui:SendOutlookMail.Files>
                                                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                                  </ui:SendOutlookMail.Files>
                                                                </ui:SendOutlookMail>
                                                              </Sequence>
                                                            </If.Then>
                                                          </If>
                                                          <If Condition="[Mrow.Item(14).ToString = &quot;Accepted - Reply&quot;]" sap2010:WorkflowViewState.IdRef="If_25">
                                                            <If.Then>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                                <Sequence.Variables>
                                                                  <Variable x:TypeArguments="ui:GenericValue" Name="Temp" />
                                                                  <Variable x:TypeArguments="x:String" Name="Text" />
                                                                </Sequence.Variables>
                                                                <ui:ReadTextFile Content="[Text]" DisplayName="Read text file" FileName="ConfirmationManual.txt" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
                                                                <ui:ForEachRow DataTable="[PolicyDET]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
                                                                  <ui:ForEachRow.Body>
                                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Prow" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                                        <Sequence.Variables>
                                                                          <Variable x:TypeArguments="ui:GenericValue" Name="Pno" />
                                                                        </Sequence.Variables>
                                                                        <If Condition="[Mrow.Item(1).ToString = Prow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_28">
                                                                          <If.Then>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                                              <Sequence.Variables>
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="Name" />
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="Car" />
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="VNO" />
                                                                              </Sequence.Variables>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[Pno]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(1).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[Name]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(9).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[Car]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(6).ToString+ " " +Prow.Item(7).ToString+ " " + Prow.Item(8).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[VNO]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(10).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:ForEachRow DataTable="[ClaimDT]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_13">
                                                                                <ui:ForEachRow.Body>
                                                                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                                                                    <ActivityAction.Argument>
                                                                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Crow" />
                                                                                    </ActivityAction.Argument>
                                                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                                                      <Sequence.Variables>
                                                                                        <Variable x:TypeArguments="ui:GenericValue" Name="Wsh" />
                                                                                      </Sequence.Variables>
                                                                                      <If Condition="[Crow.Item(1).ToString = Mrow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_29">
                                                                                        <If.Then>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                                                            <Sequence.Variables>
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Adj" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Sol" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Conf" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Sev" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Str" />
                                                                                            </Sequence.Variables>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Wsh]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(2).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Adj]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(7).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Sol]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(8).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Conf]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Mrow.Item(8).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Sev]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(6).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Str]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[String.Format(text,Name,Pno,Car,VNO,Wsh,Sev,Adj,Sol,Conf)]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_59">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Mail]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(4).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message box" sap2010:WorkflowViewState.IdRef="MessageBox_9" Text="[Str]" TopMost="True" />
                                                                                            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[Str]" DisplayName="Send Outlook Mail Message" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" IsBodyHtml="False" IsDraft="False" Subject="Claim Confirmation" To="[Mail]">
                                                                                              <ui:SendOutlookMail.Files>
                                                                                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                                                              </ui:SendOutlookMail.Files>
                                                                                            </ui:SendOutlookMail>
                                                                                          </Sequence>
                                                                                        </If.Then>
                                                                                      </If>
                                                                                    </Sequence>
                                                                                  </ActivityAction>
                                                                                </ui:ForEachRow.Body>
                                                                              </ui:ForEachRow>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                        </If>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ForEachRow.Body>
                                                                </ui:ForEachRow>
                                                              </Sequence>
                                                            </If.Then>
                                                          </If>
                                                          <If Condition="[Mrow.Item(14).ToString = &quot;Cancelled - Reply&quot;]" sap2010:WorkflowViewState.IdRef="If_33">
                                                            <If.Then>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                                <Sequence.Variables>
                                                                  <Variable x:TypeArguments="ui:GenericValue" Name="Temp" />
                                                                  <Variable x:TypeArguments="x:String" Name="Text" />
                                                                </Sequence.Variables>
                                                                <ui:ReadTextFile Content="[Text]" DisplayName="Read text file" FileName="CancellationManual.txt" sap2010:WorkflowViewState.IdRef="ReadTextFile_3" />
                                                                <ui:ForEachRow DataTable="[PolicyDET]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_16">
                                                                  <ui:ForEachRow.Body>
                                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Prow" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                                                        <Sequence.Variables>
                                                                          <Variable x:TypeArguments="ui:GenericValue" Name="Pno" />
                                                                        </Sequence.Variables>
                                                                        <If Condition="[Mrow.Item(1).ToString = Prow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_32">
                                                                          <If.Then>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_56">
                                                                              <Sequence.Variables>
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="Name" />
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="Car" />
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="VNO" />
                                                                              </Sequence.Variables>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[Pno]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(1).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[Name]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(9).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[Car]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(6).ToString+ " " +Prow.Item(7).ToString+ " " + Prow.Item(8).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[VNO]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(10).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:ForEachRow DataTable="[ClaimDT]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_15">
                                                                                <ui:ForEachRow.Body>
                                                                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                                                                    <ActivityAction.Argument>
                                                                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Crow" />
                                                                                    </ActivityAction.Argument>
                                                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                                                                      <Sequence.Variables>
                                                                                        <Variable x:TypeArguments="ui:GenericValue" Name="Wsh" />
                                                                                      </Sequence.Variables>
                                                                                      <If Condition="[Crow.Item(1).ToString = Mrow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_31">
                                                                                        <If.Then>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                                                            <Sequence.Variables>
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Adj" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Sol" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Conf" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Sev" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Str" />
                                                                                            </Sequence.Variables>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Wsh]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(2).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Adj]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(7).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_43">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Sol]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(8).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_44">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Conf]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Mrow.Item(8).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_45">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Sev]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(6).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Str]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[String.Format(text,Name,Pno,Car,VNO,Wsh,Sev,Adj,Sol,Conf)]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Mail]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(4).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message box" sap2010:WorkflowViewState.IdRef="MessageBox_10" Text="[Str]" TopMost="True" />
                                                                                            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[Str]" DisplayName="Send Outlook Mail Message" sap2010:WorkflowViewState.IdRef="SendOutlookMail_3" IsBodyHtml="False" IsDraft="False" Subject="Claim Withdrawal Confirmation" To="[Mail]">
                                                                                              <ui:SendOutlookMail.Files>
                                                                                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                                                              </ui:SendOutlookMail.Files>
                                                                                            </ui:SendOutlookMail>
                                                                                          </Sequence>
                                                                                        </If.Then>
                                                                                      </If>
                                                                                    </Sequence>
                                                                                  </ActivityAction>
                                                                                </ui:ForEachRow.Body>
                                                                              </ui:ForEachRow>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                        </If>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ForEachRow.Body>
                                                                </ui:ForEachRow>
                                                              </Sequence>
                                                            </If.Then>
                                                          </If>
                                                          <If Condition="[Mrow.Item(14).ToString = &quot;Accepted - Timeout&quot;]" sap2010:WorkflowViewState.IdRef="If_36">
                                                            <If.Then>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_65">
                                                                <Sequence.Variables>
                                                                  <Variable x:TypeArguments="ui:GenericValue" Name="Temp" />
                                                                  <Variable x:TypeArguments="x:String" Name="Text" />
                                                                </Sequence.Variables>
                                                                <ui:ReadTextFile Content="[Text]" DisplayName="Read text file" FileName="ConfirmationAuto.txt" sap2010:WorkflowViewState.IdRef="ReadTextFile_4" />
                                                                <ui:ForEachRow DataTable="[PolicyDET]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_18">
                                                                  <ui:ForEachRow.Body>
                                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Prow" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                                        <Sequence.Variables>
                                                                          <Variable x:TypeArguments="ui:GenericValue" Name="Pno" />
                                                                        </Sequence.Variables>
                                                                        <If Condition="[Mrow.Item(1).ToString = Prow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_35">
                                                                          <If.Then>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                                              <Sequence.Variables>
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="Name" />
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="Car" />
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="VNO" />
                                                                              </Sequence.Variables>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_47">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[Pno]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(1).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_48">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[Name]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(9).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_49">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[Car]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(6).ToString+ " " +Prow.Item(7).ToString+ " " + Prow.Item(8).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_50">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[VNO]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(10).ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:ForEachRow DataTable="[ClaimDT]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_17">
                                                                                <ui:ForEachRow.Body>
                                                                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                                                                    <ActivityAction.Argument>
                                                                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Crow" />
                                                                                    </ActivityAction.Argument>
                                                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                                                      <Sequence.Variables>
                                                                                        <Variable x:TypeArguments="ui:GenericValue" Name="Wsh" />
                                                                                      </Sequence.Variables>
                                                                                      <If Condition="[Crow.Item(1).ToString = Mrow.Item(1).ToString]" sap2010:WorkflowViewState.IdRef="If_34">
                                                                                        <If.Then>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                                                            <Sequence.Variables>
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Adj" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Sol" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Conf" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Sev" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="Str" />
                                                                                            </Sequence.Variables>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_51">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Wsh]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(2).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_52">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Adj]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(7).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_53">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Sol]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(8).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Conf]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Mrow.Item(8).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_55">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Sev]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Crow.Item(6).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_56">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Str]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[String.Format(text,Name,Pno,Car,VNO,Wsh,Sev,Adj,Sol,Conf)]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_58">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[Mail]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Prow.Item(4).ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message box" sap2010:WorkflowViewState.IdRef="MessageBox_11" Text="[Str]" TopMost="True" />
                                                                                            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[Str]" DisplayName="Send Outlook Mail Message" sap2010:WorkflowViewState.IdRef="SendOutlookMail_4" IsBodyHtml="False" IsDraft="False" Subject="Claim Confirmation" To="[Mail]">
                                                                                              <ui:SendOutlookMail.Files>
                                                                                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                                                              </ui:SendOutlookMail.Files>
                                                                                            </ui:SendOutlookMail>
                                                                                          </Sequence>
                                                                                        </If.Then>
                                                                                      </If>
                                                                                    </Sequence>
                                                                                  </ActivityAction>
                                                                                </ui:ForEachRow.Body>
                                                                              </ui:ForEachRow>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                        </If>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ForEachRow.Body>
                                                                </ui:ForEachRow>
                                                              </Sequence>
                                                            </If.Then>
                                                          </If>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:ForEachRow.Body>
                                                  </ui:ForEachRow>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ExcelApplicationScope.Body>
                                          </ui:ExcelApplicationScope>
                                        </Sequence>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_18">
                                            <Sequence DisplayName="Update - DB - Sheet2" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                              <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" ExistingDbConnection="{x:Null}" CommandType="Text" DisplayName="Execute query" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" ProviderName="System.Data.OleDb" Sql="DELETE * from ClaimDetails" ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\InsuranceClaimAccess.accdb">
                                                <ui:ExecuteQuery.Parameters>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:ExecuteQuery.Parameters>
                                              </ui:ExecuteQuery>
                                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                                                <ui:ExcelApplicationScope.Body>
                                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="sd:DataTable" Name="Sheet2" />
                                                      </Sequence.Variables>
                                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[Sheet2]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" SheetName="Sheet2">
                                                        <ui:ExcelReadRange.Range>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                          </InArgument>
                                                        </ui:ExcelReadRange.Range>
                                                      </ui:ExcelReadRange>
                                                      <ui:ForEachRow DataTable="[Sheet2]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_19">
                                                        <ui:ForEachRow.Body>
                                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="sd:DataTable" Name="NewDT" />
                                                              </Sequence.Variables>
                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_77">
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_60">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo1]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(0).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_61">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo2]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(1).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_62">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo3]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(2).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_63">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo4]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(3).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_64">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo5]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(4).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_65">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo6]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(5).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_66">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo7]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(6).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_67">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo8]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(7).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_68">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo9]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(8).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_69">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo10]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(9).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_70">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Clo11]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="ui:GenericValue">[row.Item(10).ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                              <ui:BuildDataTable DataTable="[NewDT]" DisplayName="Build data table" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;ID&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PolicyNumber&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;WorkshopAmount&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ClaimWithdrawal&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SuperAdmin&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PolicyNoCheck&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Severity&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Adjusters&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Solicitors&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Claim3&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;STATUS&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Clo1,Clo2,Clo3,Clo4,Clo5,Clo6,Clo7,Clo8,Clo9,Clo10,Clo11}]" DataTable="[NewDT]" DisplayName="Add data row" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                                              <ui:InsertDataTable AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" DataTable="[NewDT]" DisplayName="Insert" sap2010:WorkflowViewState.IdRef="InsertDataTable_1" ProviderName="System.Data.OleDb" TableName="ClaimDetails" ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\InsuranceClaimAccess.accdb" />
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:ForEachRow.Body>
                                                      </ui:ForEachRow>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ExcelApplicationScope.Body>
                                              </ui:ExcelApplicationScope>
                                            </Sequence>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                                                <Sequence DisplayName="Update 7" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                                  <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" ExistingDbConnection="{x:Null}" CommandType="Text" DisplayName="Execute query" sap2010:WorkflowViewState.IdRef="ExecuteQuery_7" ProviderName="System.Data.OleDb" Sql="DELETE * from FinalStatus" ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\InsuranceClaimAccess.accdb">
                                                    <ui:ExecuteQuery.Parameters>
                                                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                    </ui:ExecuteQuery.Parameters>
                                                  </ui:ExecuteQuery>
                                                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                                                    <ui:ExcelApplicationScope.Body>
                                                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_86">
                                                          <Sequence.Variables>
                                                            <Variable x:TypeArguments="sd:DataTable" Name="Sheet7" />
                                                          </Sequence.Variables>
                                                          <ui:ExcelReadRange AddHeaders="True" DataTable="[Sheet7]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" SheetName="Sheet7">
                                                            <ui:ExcelReadRange.Range>
                                                              <InArgument x:TypeArguments="x:String">
                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                              </InArgument>
                                                            </ui:ExcelReadRange.Range>
                                                          </ui:ExcelReadRange>
                                                          <ui:OpenApplication ApplicationWindow="{x:Null}" Arguments="{x:Null}" TimeoutMS="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Open application 'MSACCESS.EXE Access'" FileName="C:\Program Files (x86)\Microsoft Office\Office15\MSACCESS.EXE" sap2010:WorkflowViewState.IdRef="OpenApplication_1" InformativeScreenshot="4e3837d6a9add088df33c7dd08170de0" Selector="&lt;wnd app='msaccess.exe' cls='OMain' title='Access (Product Activation Failed)*' /&gt;">
                                                            <ui:OpenApplication.Body>
                                                              <ActivityAction x:TypeArguments="x:Object">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                </ActivityAction.Argument>
                                                                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_87">
                                                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'link  InsuranceClaimAcc...'" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                    <ui:Click.CursorPosition>
                                                                      <ui:CursorPosition Position="Center">
                                                                        <ui:CursorPosition.OffsetX>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:CursorPosition.OffsetX>
                                                                        <ui:CursorPosition.OffsetY>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:CursorPosition.OffsetY>
                                                                      </ui:CursorPosition>
                                                                    </ui:Click.CursorPosition>
                                                                    <ui:Click.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a47e9569d98c81797715662a20e57964" Selector="&lt;wnd app='msaccess.exe' cls='OMain' title='Access (Product Activation Failed)' /&gt;&lt;wnd cls='NetUIHWND' idx='1' /&gt;&lt;ctrl name='Backstage view' role='pane' /&gt;&lt;ctrl name='New' role='pane' /&gt;&lt;ctrl name='New' role='grouping' /&gt;&lt;ctrl name='Recent' role='list' /&gt;&lt;ctrl idx='1' name='InsuranceClaimAccess.accdb' role='list item' /&gt;&lt;ctrl name='InsuranceClaimAccess.accdb' role='link' /&gt;" WaitForReady="INTERACTIVE" />
                                                                    </ui:Click.Target>
                                                                  </ui:Click>
                                                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Cancel'" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                    <ui:Click.CursorPosition>
                                                                      <ui:CursorPosition Position="Center">
                                                                        <ui:CursorPosition.OffsetX>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:CursorPosition.OffsetX>
                                                                        <ui:CursorPosition.OffsetY>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:CursorPosition.OffsetY>
                                                                      </ui:CursorPosition>
                                                                    </ui:Click.CursorPosition>
                                                                    <ui:Click.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="293293610488c93c4b49bbd23e9665a9" Selector="&lt;wnd app='msaccess.exe' cls='NUIDialog' title='Microsoft Office Activation Wizard' /&gt;&lt;wnd aaname='Microsoft Office Activation Wizard' cls='NetUIHWND' /&gt;&lt;ctrl name='Microsoft Office Activation Wizard' role='dialog' /&gt;&lt;ctrl name='Cancel' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                                    </ui:Click.Target>
                                                                  </ui:Click>
                                                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_DOUBLE" DisplayName="Double Click" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                    <ui:Click.CursorPosition>
                                                                      <ui:CursorPosition Position="Center">
                                                                        <ui:CursorPosition.OffsetX>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:CursorPosition.OffsetX>
                                                                        <ui:CursorPosition.OffsetY>
                                                                          <InArgument x:TypeArguments="x:Int32" />
                                                                        </ui:CursorPosition.OffsetY>
                                                                      </ui:CursorPosition>
                                                                    </ui:Click.CursorPosition>
                                                                    <ui:Click.Target>
                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="f1d8a28d7bf419085ee4d31f4a0275c1" Selector="&lt;wnd cls='NetUIHWND' idx='3' /&gt;&lt;ctrl name='Navigation Pane' role='client' /&gt;&lt;ctrl name='Forms' role='grouping' /&gt;&lt;ctrl name='Forms' role='client' /&gt;&lt;ctrl name='Final Status' role='push button' /&gt;&lt;ctrl name='Final Status' role='text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                    </ui:Click.Target>
                                                                  </ui:Click>
                                                                  <ui:ForEachRow DataTable="[Sheet7]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_21">
                                                                    <ui:ForEachRow.Body>
                                                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                                                        <ActivityAction.Argument>
                                                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                                        </ActivityAction.Argument>
                                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                                                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Next record'" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                            <ui:Click.CursorPosition>
                                                                              <ui:CursorPosition Position="Center">
                                                                                <ui:CursorPosition.OffsetX>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:CursorPosition.OffsetX>
                                                                                <ui:CursorPosition.OffsetY>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:CursorPosition.OffsetY>
                                                                              </ui:CursorPosition>
                                                                            </ui:Click.CursorPosition>
                                                                            <ui:Click.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="c9fc91c6ed09b137f88e8832be5c7135" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;wnd cls='OSUI' title='SUI' /&gt;&lt;wnd cls='NetUINativeHWNDHost' title='RecNavHost' /&gt;&lt;wnd aaname='Record Navigator' cls='NetUIHWND' /&gt;&lt;ctrl name='Record Navigator' role='client' /&gt;&lt;ctrl name='New (blank) record' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:Click.Target>
                                                                          </ui:Click>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="False" SimulateType="False" Text="[row.Item(1).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="0a27929d4c9849f6587f832a5fd20db6" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='PolicyNumber' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_2" SendWindowMessages="False" SimulateType="False" Text="[row.Item(2).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9c9f8f9a40918666eba366a6388f4768" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='WorkshopAmount' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  Make'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_3" SendWindowMessages="False" SimulateType="False" Text="[row.Item(3).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a13c51b687faad3e7cea575ba6414106" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='Make' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  Model'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_4" SendWindowMessages="False" SimulateType="False" Text="[row.Item(4).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="e9868026ce7d23a6035bdbef7228337b" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='Model' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_5" SendWindowMessages="False" SimulateType="False" Text="[row.Item(5).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="3431d89010e9b66a4d1819ab6f8f8960" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='YearOfMake' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  Estimate'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_6" SendWindowMessages="False" SimulateType="False" Text="[row.Item(6).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="f7d92cc560336dc3af553075e6d70393" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='Estimate' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  Result'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_7" SendWindowMessages="False" SimulateType="False" Text="[row.Item(7).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="8f82aa8ea42cd49895ce5bdfa3b6433c" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='Result' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  NetAmount'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_8" SendWindowMessages="False" SimulateType="False" Text="[row.Item(8).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="5b146916bae1ac7ef80ca97702e84479" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='NetAmount' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  TimeStamp'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_9" SendWindowMessages="False" SimulateType="False" Text="[row.Item(9).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="dedc18021d3687421862f34c88834cca" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='TimeStamp' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  Timeout'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_10" SendWindowMessages="False" SimulateType="False" Text="[row.Item(10).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="43d04fb822fcf5371d353bd295fb7481" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='Timeout' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  Mail'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_11" SendWindowMessages="False" SimulateType="False" Text="[row.Item(11).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="477c2b3f4a28323b7a67fc69b27d74e6" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='Mail' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  Diff'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_12" SendWindowMessages="False" SimulateType="False" Text="[row.Item(12).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="e472722b69ef5f1e640e5a0779f309b4" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='Diff' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  RecvTime'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_14" SendWindowMessages="False" SimulateType="False" Text="[row.Item(13).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="2c38ff0a4cb59c4f8fe2f2b3f122a354" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='RecvTime' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'editable text  Status'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_15" SendWindowMessages="False" SimulateType="False" Text="[row.Item(14).ToString]">
                                                                            <ui:TypeInto.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="585be6ad66618ea8a2eea511c4d442d8" Selector="&lt;wnd aaname='Workspace' cls='MDIClient' /&gt;&lt;wnd cls='OForm' title='Final Status' /&gt;&lt;ctrl name='Final Status' role='client' /&gt;&lt;ctrl name='Status' role='editable text' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:TypeInto.Target>
                                                                          </ui:TypeInto>
                                                                        </Sequence>
                                                                      </ActivityAction>
                                                                    </ui:ForEachRow.Body>
                                                                  </ui:ForEachRow>
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ui:OpenApplication.Body>
                                                          </ui:OpenApplication>
                                                          <ui:CloseApplication DisplayName="Close application 'MSACCESS.EXE Access'" sap2010:WorkflowViewState.IdRef="CloseApplication_2">
                                                            <ui:CloseApplication.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="388cab2741bee5a9507f7365ab91c382" Selector="&lt;wnd app='msaccess.exe' cls='OMain' title='Access (Product Activation Failed) - InsuranceClaimAccess : Data*' /&gt;" WaitForReady="INTERACTIVE" />
                                                            </ui:CloseApplication.Target>
                                                          </ui:CloseApplication>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:ExcelApplicationScope.Body>
                                                  </ui:ExcelApplicationScope>
                                                </Sequence>
                                                <FlowStep.Next>
                                                  <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_21">
                                                    <Sequence DisplayName="Garbage Clearence" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_13" WorkbookPath="C:\Users\srira\Documents\UiPath\InsuranceClaimAssess\query1.xlsx">
                                                        <ui:ExcelApplicationScope.Body>
                                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_92">
                                                              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'EXCEL.EXE query1.xlsx'" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="9bd1d9a31fc5be539be87dac57b4b47d" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='query1.xlsx - Excel (Product Activation Failed)' /&gt;">
                                                                <ui:WindowScope.Body>
                                                                  <ActivityAction x:TypeArguments="x:Object">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                    </ActivityAction.Argument>
                                                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_91">
                                                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'page tab  Sheet1'" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                        <ui:Click.CursorPosition>
                                                                          <ui:CursorPosition Position="Center">
                                                                            <ui:CursorPosition.OffsetX>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetX>
                                                                            <ui:CursorPosition.OffsetY>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetY>
                                                                          </ui:CursorPosition>
                                                                        </ui:Click.CursorPosition>
                                                                        <ui:Click.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7286dc4390bcc32a8f9960de315a9f99" Selector="&lt;wnd cls='EXCEL7' title='query1.xlsx' /&gt;&lt;ctrl name='query1.xlsx' role='client' /&gt;&lt;ctrl name='Sheet Navigation Bar' role='client' /&gt;&lt;ctrl name='Sheet Tabs' role='page tab list' /&gt;&lt;ctrl name='Sheet1' role='page tab' /&gt;" WaitForReady="INTERACTIVE" />
                                                                        </ui:Click.Target>
                                                                      </ui:Click>
                                                                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                                                        <TryCatch.Try>
                                                                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Cancel'" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                            <ui:Click.CursorPosition>
                                                                              <ui:CursorPosition Position="Center">
                                                                                <ui:CursorPosition.OffsetX>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:CursorPosition.OffsetX>
                                                                                <ui:CursorPosition.OffsetY>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:CursorPosition.OffsetY>
                                                                              </ui:CursorPosition>
                                                                            </ui:Click.CursorPosition>
                                                                            <ui:Click.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="012bea6c54469aacbe68802ef9352503" Selector="&lt;wnd app='excel.exe' cls='NUIDialog' title='Microsoft Office Activation Wizard' /&gt;&lt;wnd aaname='Microsoft Office Activation Wizard' cls='NetUIHWND' /&gt;&lt;ctrl name='Microsoft Office Activation Wizard' role='dialog' /&gt;&lt;ctrl name='Cancel' role='push button' /&gt;" WaitForReady="INTERACTIVE" />
                                                                            </ui:Click.Target>
                                                                          </ui:Click>
                                                                        </TryCatch.Try>
                                                                        <TryCatch.Catches>
                                                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                                              <ActivityAction.Argument>
                                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                              </ActivityAction.Argument>
                                                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="No need of activation" />
                                                                            </ActivityAction>
                                                                          </Catch>
                                                                        </TryCatch.Catches>
                                                                      </TryCatch>
                                                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'XLDESK'" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                        <ui:Click.CursorPosition>
                                                                          <ui:CursorPosition Position="Center">
                                                                            <ui:CursorPosition.OffsetX>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetX>
                                                                            <ui:CursorPosition.OffsetY>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetY>
                                                                          </ui:CursorPosition>
                                                                        </ui:Click.CursorPosition>
                                                                        <ui:Click.Target>
                                                                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="fd1822e72dda19aebe8d194cc6d21934" Selector="&lt;wnd cls='XLDESK' /&gt;" WaitForReady="INTERACTIVE">
                                                                            <ui:Target.ClippingRegion>
                                                                              <ui:Region Rectangle="0, 43, 24, 14" />
                                                                            </ui:Target.ClippingRegion>
                                                                          </ui:Target>
                                                                        </ui:Click.Target>
                                                                      </ui:Click>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="right" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="down" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="del" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'page tab  Sheet2'" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                        <ui:Click.CursorPosition>
                                                                          <ui:CursorPosition Position="Center">
                                                                            <ui:CursorPosition.OffsetX>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetX>
                                                                            <ui:CursorPosition.OffsetY>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetY>
                                                                          </ui:CursorPosition>
                                                                        </ui:Click.CursorPosition>
                                                                        <ui:Click.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="17494fa0d1adcd3b2223fcc628d56d32" Selector="&lt;wnd cls='EXCEL7' title='query1.xlsx' /&gt;&lt;ctrl name='query1.xlsx' role='client' /&gt;&lt;ctrl name='Sheet Navigation Bar' role='client' /&gt;&lt;ctrl name='Sheet Tabs' role='page tab list' /&gt;&lt;ctrl name='Sheet2' role='page tab' /&gt;" WaitForReady="INTERACTIVE" />
                                                                        </ui:Click.Target>
                                                                      </ui:Click>
                                                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'XLDESK'" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                        <ui:Click.CursorPosition>
                                                                          <ui:CursorPosition Position="Center">
                                                                            <ui:CursorPosition.OffsetX>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetX>
                                                                            <ui:CursorPosition.OffsetY>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetY>
                                                                          </ui:CursorPosition>
                                                                        </ui:Click.CursorPosition>
                                                                        <ui:Click.Target>
                                                                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="6060639177bb40ccb3be4d754a95d200" Selector="&lt;wnd cls='XLDESK' /&gt;" WaitForReady="INTERACTIVE">
                                                                            <ui:Target.ClippingRegion>
                                                                              <ui:Region Rectangle="3, 37, 19, 20" />
                                                                            </ui:Target.ClippingRegion>
                                                                          </ui:Target>
                                                                        </ui:Click.Target>
                                                                      </ui:Click>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="right" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="down" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_6" Key="del" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'page tab  Sheet3'" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                        <ui:Click.CursorPosition>
                                                                          <ui:CursorPosition Position="Center">
                                                                            <ui:CursorPosition.OffsetX>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetX>
                                                                            <ui:CursorPosition.OffsetY>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetY>
                                                                          </ui:CursorPosition>
                                                                        </ui:Click.CursorPosition>
                                                                        <ui:Click.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="4b62e88d2781cff283e480c4cc76a5d6" Selector="&lt;wnd cls='EXCEL7' title='query1.xlsx' /&gt;&lt;ctrl name='query1.xlsx' role='client' /&gt;&lt;ctrl name='Sheet Navigation Bar' role='client' /&gt;&lt;ctrl name='Sheet Tabs' role='page tab list' /&gt;&lt;ctrl name='Sheet3' role='page tab' /&gt;" WaitForReady="INTERACTIVE" />
                                                                        </ui:Click.Target>
                                                                      </ui:Click>
                                                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'XLDESK'" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                        <ui:Click.CursorPosition>
                                                                          <ui:CursorPosition Position="Center">
                                                                            <ui:CursorPosition.OffsetX>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetX>
                                                                            <ui:CursorPosition.OffsetY>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetY>
                                                                          </ui:CursorPosition>
                                                                        </ui:Click.CursorPosition>
                                                                        <ui:Click.Target>
                                                                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="48e2dfee3848777baba0ec17ca020b7e" Selector="&lt;wnd cls='XLDESK' /&gt;" WaitForReady="INTERACTIVE">
                                                                            <ui:Target.ClippingRegion>
                                                                              <ui:Region Rectangle="0, 43, 30, 25" />
                                                                            </ui:Target.ClippingRegion>
                                                                          </ui:Target>
                                                                        </ui:Click.Target>
                                                                      </ui:Click>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="right" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_8" Key="down" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_9" Key="del" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'page tab  Sheet7'" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                        <ui:Click.CursorPosition>
                                                                          <ui:CursorPosition Position="Center">
                                                                            <ui:CursorPosition.OffsetX>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetX>
                                                                            <ui:CursorPosition.OffsetY>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetY>
                                                                          </ui:CursorPosition>
                                                                        </ui:Click.CursorPosition>
                                                                        <ui:Click.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="193babcf41c19020a55abc39185f1125" Selector="&lt;wnd cls='EXCEL7' title='query1.xlsx' /&gt;&lt;ctrl name='query1.xlsx' role='client' /&gt;&lt;ctrl name='Sheet Navigation Bar' role='client' /&gt;&lt;ctrl name='Sheet Tabs' role='page tab list' /&gt;&lt;ctrl name='Sheet7' role='page tab' /&gt;" WaitForReady="INTERACTIVE" />
                                                                        </ui:Click.Target>
                                                                      </ui:Click>
                                                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'XLDESK'" sap2010:WorkflowViewState.IdRef="Click_14" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                                        <ui:Click.CursorPosition>
                                                                          <ui:CursorPosition Position="Center">
                                                                            <ui:CursorPosition.OffsetX>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetX>
                                                                            <ui:CursorPosition.OffsetY>
                                                                              <InArgument x:TypeArguments="x:Int32" />
                                                                            </ui:CursorPosition.OffsetY>
                                                                          </ui:CursorPosition>
                                                                        </ui:Click.CursorPosition>
                                                                        <ui:Click.Target>
                                                                          <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="06a6c5923d7442963336cfd37343a541" Selector="&lt;wnd cls='XLDESK' /&gt;" WaitForReady="INTERACTIVE">
                                                                            <ui:Target.ClippingRegion>
                                                                              <ui:Region Rectangle="0, 35, 27, 24" />
                                                                            </ui:Target.ClippingRegion>
                                                                          </ui:Target>
                                                                        </ui:Click.Target>
                                                                      </ui:Click>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_10" Key="right" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_11" Key="down" KeyModifiers="Ctrl, Shift" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_12" Key="del" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_13" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                                                        <ui:SendHotkey.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                        </ui:SendHotkey.Target>
                                                                      </ui:SendHotkey>
                                                                      <ui:CloseApplication DisplayName="Close application 'EXCEL.EXE query1.xlsx'" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
                                                                        <ui:CloseApplication.Target>
                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="edc70ba13f5625d614629791533a4931" WaitForReady="INTERACTIVE" />
                                                                        </ui:CloseApplication.Target>
                                                                      </ui:CloseApplication>
                                                                    </Sequence>
                                                                  </ActivityAction>
                                                                </ui:WindowScope.Body>
                                                              </ui:WindowScope>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:ExcelApplicationScope.Body>
                                                      </ui:ExcelApplicationScope>
                                                    </Sequence>
                                                  </FlowStep>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <sads:DebugSymbol.Symbol></sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ExecuteQuery_1" sap:VirtualizedContainerService.HintSize="454,88" />
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,333" />
      <sap2010:ViewStateData Id="ExcelWriteRange_1" sap:VirtualizedContainerService.HintSize="418,87" />
      <sap2010:ViewStateData Id="Sequence_67" sap:VirtualizedContainerService.HintSize="440,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_6" sap:VirtualizedContainerService.HintSize="454,693" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteQuery_2" sap:VirtualizedContainerService.HintSize="421,88" />
      <sap2010:ViewStateData Id="ExcelWriteRange_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_74" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_9" sap:VirtualizedContainerService.HintSize="421,320" />
      <sap2010:ViewStateData Id="Sequence_68" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteQuery_3" sap:VirtualizedContainerService.HintSize="417,88" />
      <sap2010:ViewStateData Id="ExcelWriteRange_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_73" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_8" sap:VirtualizedContainerService.HintSize="417,320" />
      <sap2010:ViewStateData Id="Sequence_70" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteQuery_4" sap:VirtualizedContainerService.HintSize="421,88" />
      <sap2010:ViewStateData Id="ExcelWriteRange_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_7" sap:VirtualizedContainerService.HintSize="421,320" />
      <sap2010:ViewStateData Id="Sequence_71" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetOutlookMailMessages_1" sap:VirtualizedContainerService.HintSize="884,22" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="884,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="552,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="552,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_2" sap:VirtualizedContainerService.HintSize="516,59" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="ExcelWriteCell_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_25" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,596">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,743" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="486,1067">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="516,1214" />
      <sap2010:ViewStateData Id="Assign_88" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_22" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_38" sap:VirtualizedContainerService.HintSize="464,236" />
      <sap2010:ViewStateData Id="Assign_89" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_90" sap:VirtualizedContainerService.HintSize="486,460">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_22" sap:VirtualizedContainerService.HintSize="516,607" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="538,2284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_2" sap:VirtualizedContainerService.HintSize="552,2393" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="574,2717">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="699,2865" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="721,2989">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="884,3123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="884,93" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="2119,60" />
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="2083,59" />
      <sap2010:ViewStateData Id="ExcelWriteCell_13" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_8" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_15" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="653,236" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="675,360">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="1014,509" />
      <sap2010:ViewStateData Id="ExcelWriteCell_10" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="1353,658" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="1692,807" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="2031,954" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="2031,60" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="2053,1178">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="2083,1325" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="2105,1548">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="2119,1657" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_3" sap:VirtualizedContainerService.HintSize="788,59" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="788,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="464,236" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="486,360">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="611,509" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="736,658" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="736,60" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="758,882">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_3" sap:VirtualizedContainerService.HintSize="788,1030" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="810,1353">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_3" sap:VirtualizedContainerService.HintSize="824,1462" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_4" sap:VirtualizedContainerService.HintSize="715,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_5" sap:VirtualizedContainerService.HintSize="715,59" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_16" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="464,236" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="486,460">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_5" sap:VirtualizedContainerService.HintSize="516,608" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="538,832">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="663,981" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_17" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="464,236" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="486,460">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_6" sap:VirtualizedContainerService.HintSize="516,608" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="538,832">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="663,981" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_23" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="464,236" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="486,460">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_7" sap:VirtualizedContainerService.HintSize="516,608" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="538,832">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="663,981" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_19" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="464,236" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="486,460">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_8" sap:VirtualizedContainerService.HintSize="516,608" />
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="538,832">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_21" sap:VirtualizedContainerService.HintSize="663,981" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_20" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_22" sap:VirtualizedContainerService.HintSize="464,234" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="486,458">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_9" sap:VirtualizedContainerService.HintSize="516,605" />
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="538,829">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_23" sap:VirtualizedContainerService.HintSize="663,976" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="685,5184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_4" sap:VirtualizedContainerService.HintSize="715,5332" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="737,5654">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_4" sap:VirtualizedContainerService.HintSize="751,5763" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_6" sap:VirtualizedContainerService.HintSize="914,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_7" sap:VirtualizedContainerService.HintSize="914,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_8" sap:VirtualizedContainerService.HintSize="914,59" />
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SendOutlookMail_1" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="336,468">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="862,615" />
      <sap2010:ViewStateData Id="ReadTextFile_2" sap:VirtualizedContainerService.HintSize="715,59" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="MessageBox_9" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="SendOutlookMail_2" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="336,1068">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_29" sap:VirtualizedContainerService.HintSize="464,1215" />
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="486,1339">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_13" sap:VirtualizedContainerService.HintSize="516,1486" />
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="538,2010">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_28" sap:VirtualizedContainerService.HintSize="663,2157" />
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="685,2281">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_11" sap:VirtualizedContainerService.HintSize="715,2428" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="737,2651">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_25" sap:VirtualizedContainerService.HintSize="862,2798" />
      <sap2010:ViewStateData Id="ReadTextFile_3" sap:VirtualizedContainerService.HintSize="715,59" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="MessageBox_10" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="SendOutlookMail_3" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="Sequence_54" sap:VirtualizedContainerService.HintSize="336,1068">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_31" sap:VirtualizedContainerService.HintSize="464,1215" />
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="486,1339">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_15" sap:VirtualizedContainerService.HintSize="516,1486" />
      <sap2010:ViewStateData Id="Sequence_56" sap:VirtualizedContainerService.HintSize="538,2010">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_32" sap:VirtualizedContainerService.HintSize="663,2157" />
      <sap2010:ViewStateData Id="Sequence_57" sap:VirtualizedContainerService.HintSize="685,2281">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_16" sap:VirtualizedContainerService.HintSize="715,2428" />
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="737,2651">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_33" sap:VirtualizedContainerService.HintSize="862,2798" />
      <sap2010:ViewStateData Id="ReadTextFile_4" sap:VirtualizedContainerService.HintSize="715,59" />
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="516,60" />
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="MessageBox_11" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="SendOutlookMail_4" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="Sequence_60" sap:VirtualizedContainerService.HintSize="336,1068">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_34" sap:VirtualizedContainerService.HintSize="464,1215" />
      <sap2010:ViewStateData Id="Sequence_61" sap:VirtualizedContainerService.HintSize="486,1339">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_17" sap:VirtualizedContainerService.HintSize="516,1486" />
      <sap2010:ViewStateData Id="Sequence_62" sap:VirtualizedContainerService.HintSize="538,2010">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_35" sap:VirtualizedContainerService.HintSize="663,2157" />
      <sap2010:ViewStateData Id="Sequence_63" sap:VirtualizedContainerService.HintSize="685,2281">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_18" sap:VirtualizedContainerService.HintSize="715,2428" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="737,2651">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_36" sap:VirtualizedContainerService.HintSize="862,2798" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="884,9253">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_10" sap:VirtualizedContainerService.HintSize="914,9400" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="936,9821">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_5" sap:VirtualizedContainerService.HintSize="950,9930" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteQuery_5" sap:VirtualizedContainerService.HintSize="421,88" />
      <sap2010:ViewStateData Id="ExcelReadRange_9" sap:VirtualizedContainerService.HintSize="366,59" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_61" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_62" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_63" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_64" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_65" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_67" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_68" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_69" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_70" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="AddDataRow_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="InsertDataTable_1" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="336,491">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_19" sap:VirtualizedContainerService.HintSize="366,638" />
      <sap2010:ViewStateData Id="Sequence_76" sap:VirtualizedContainerService.HintSize="388,861">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_10" sap:VirtualizedContainerService.HintSize="421,970" />
      <sap2010:ViewStateData Id="Sequence_75" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteQuery_7" sap:VirtualizedContainerService.HintSize="450,88" />
      <sap2010:ViewStateData Id="ExcelReadRange_11" sap:VirtualizedContainerService.HintSize="414,59" />
      <sap2010:ViewStateData Id="Click_2" sap:VirtualizedContainerService.HintSize="366,106" />
      <sap2010:ViewStateData Id="Click_3" sap:VirtualizedContainerService.HintSize="366,106" />
      <sap2010:ViewStateData Id="Click_4" sap:VirtualizedContainerService.HintSize="366,106" />
      <sap2010:ViewStateData Id="Click_5" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="TypeInto_1" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_3" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_4" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_5" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_6" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_7" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_8" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_9" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_10" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_11" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_12" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_14" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_15" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Sequence_88" sap:VirtualizedContainerService.HintSize="336,2666">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_21" sap:VirtualizedContainerService.HintSize="366,2813" />
      <sap2010:ViewStateData Id="Sequence_87" sap:VirtualizedContainerService.HintSize="388,3375">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="OpenApplication_1" sap:VirtualizedContainerService.HintSize="414,3561" />
      <sap2010:ViewStateData Id="CloseApplication_2" sap:VirtualizedContainerService.HintSize="414,106" />
      <sap2010:ViewStateData Id="Sequence_86" sap:VirtualizedContainerService.HintSize="436,3930">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_12" sap:VirtualizedContainerService.HintSize="450,4039" />
      <sap2010:ViewStateData Id="Sequence_85" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_6" sap:VirtualizedContainerService.HintSize="414,106" />
      <sap2010:ViewStateData Id="Click_7" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="400,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="414,322" />
      <sap2010:ViewStateData Id="Click_8" sap:VirtualizedContainerService.HintSize="414,106" />
      <sap2010:ViewStateData Id="SendHotkey_1" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="SendHotkey_2" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="SendHotkey_3" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="Click_9" sap:VirtualizedContainerService.HintSize="414,106" />
      <sap2010:ViewStateData Id="Click_10" sap:VirtualizedContainerService.HintSize="414,106" />
      <sap2010:ViewStateData Id="SendHotkey_4" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="SendHotkey_5" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="SendHotkey_6" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="Click_11" sap:VirtualizedContainerService.HintSize="414,106" />
      <sap2010:ViewStateData Id="Click_12" sap:VirtualizedContainerService.HintSize="414,106" />
      <sap2010:ViewStateData Id="SendHotkey_7" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="SendHotkey_8" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="SendHotkey_9" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="Click_13" sap:VirtualizedContainerService.HintSize="414,106" />
      <sap2010:ViewStateData Id="Click_14" sap:VirtualizedContainerService.HintSize="414,106" />
      <sap2010:ViewStateData Id="SendHotkey_10" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="SendHotkey_11" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="SendHotkey_12" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="SendHotkey_13" sap:VirtualizedContainerService.HintSize="414,116" />
      <sap2010:ViewStateData Id="CloseApplication_1" sap:VirtualizedContainerService.HintSize="414,106" />
      <sap2010:ViewStateData Id="Sequence_91" sap:VirtualizedContainerService.HintSize="436,3788">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_1" sap:VirtualizedContainerService.HintSize="450,3934" />
      <sap2010:ViewStateData Id="Sequence_92" sap:VirtualizedContainerService.HintSize="472,4058">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_13" sap:VirtualizedContainerService.HintSize="486,4167" />
      <sap2010:ViewStateData Id="Sequence_93" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">470,274.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">280,1245.5 280,1274.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">470,194.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">570,245.5 570,274.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">470,104.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">570,155.5 570,194.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">250,334.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">350,385.5 350,404.5 220,404.5 220,-15.5 570,-15.5 570,104.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">250,254.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">350,305.5 350,334.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">250,184.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">350,235.5 350,254.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">250,114.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">350,165.5 350,184.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,334.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,385.5 100,415.5 0,415.5 0,84.5 350,84.5 350,114.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,254.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,305.5 100,334.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,184.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,235.5 100,254.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,114.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,165.5 100,184.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,14.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,65.5 100,114.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="764,1282">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">380,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Height">1245.5</x:Double>
            <x:Double x:Key="Width">750</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">380,40 200,40</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="804,1362" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>